#
# ***** BEGIN LICENSE BLOCK *****
# 
# Copyright (C) 2020-2023 Olof Hagsand
#
# This file is part of CLIXON
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Alternatively, the contents of this file may be used under the terms of
# the GNU General Public License Version 3 or later (the "GPL"),
# in which case the provisions of the GPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of the GPL, and not to allow others to
# use your version of this file under the terms of Apache License version 2, 
# indicate your decision by deleting the provisions above and replace them with
# the notice and other provisions required by the GPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the Apache License version 2 or the GPL.
#
# ***** END LICENSE BLOCK *****
#
prefix 		= @prefix@
datarootdir	= @datarootdir@
srcdir  	= @srcdir@
top_srcdir  	= @top_srcdir@
exec_prefix 	= @exec_prefix@
bindir 		= @bindir@
libdir		= @libdir@
dbdir		= @prefix@/db
mandir		= @mandir@
libexecdir	= @libexecdir@
localstatedir	= @localstatedir@
sysconfdir	= @sysconfdir@
HOST_VENDOR     = @host_vendor@
LIBXML2_CFLAGS  = @LIBXML2_CFLAGS@

VPATH       	= @srcdir@
CC		= @CC@
CFLAGS  	= @CFLAGS@

ifeq ($(HOST_VENDOR),apple)
INSTALLFLAGS =
else
INSTALLFLAGS = @INSTALLFLAGS@
endif

LDFLAGS 	= @LDFLAGS@
LIBS    	= @LIBS@
CPPFLAGS  	= @CPPFLAGS@

INCLUDES        = -I. -I$(top_srcdir)/include

CPPFLAGS	+= $(INCLUDES)

# Utilities, unit testings.
APPSRC    = clixon_util_xml.c
APPSRC   += clixon_util_xml_mod.c
APPSRC   += clixon_util_json.c
APPSRC   += clixon_util_yang.c
APPSRC   += clixon_util_xpath.c
APPSRC   += clixon_util_path.c
APPSRC   += clixon_util_datastore.c
APPSRC   += clixon_util_regexp.c
APPSRC   += clixon_util_socket.c
APPSRC   += clixon_util_validate.c
APPSRC   += clixon_util_dispatcher.c 
APPSRC   += clixon_netconf_ssh_callhome.c
APPSRC   += clixon_netconf_ssh_callhome_client.c
APPSRC   += clixon_util_stream.c
APPSRC   += clixon_restconf_callhome_client.c
APPSRC   += clixon_util_ssl.c
#APPSRC   += clixon_util_grpc.c # work in progress

APPS	  = $(APPSRC:.c=)

.PHONY:	install uninstall TAGS depend loc

all:	 $(APPS)

clean:
	rm -f $(APPS) clixon_util_stream *.core
	rm -f *.gcda *.gcno *.gcov # coverage

# APPS
clixon_util_xml: clixon_util_xml.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_json: clixon_util_json.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_yang: clixon_util_yang.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_xpath: clixon_util_xpath.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_path: clixon_util_path.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_datastore: clixon_util_datastore.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -D__PROGRAM__=\"$@\" $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_xml_mod: clixon_util_xml_mod.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -D__PROGRAM__=\"$@\" $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_regexp: clixon_util_regexp.c
	$(CC) $(LIBXML2_CFLAGS) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_socket: clixon_util_socket.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -D__PROGRAM__=\"$@\" $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_validate: clixon_util_validate.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -D__PROGRAM__=\"$@\" $(LDFLAGS) $^ -l clixon_backend -o $@ $(LIBS)

clixon_util_dispatcher: clixon_util_dispatcher.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ -l clixon_backend -o $@ $(LIBS)

clixon_util_stream: clixon_util_stream.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -lcurl -o $@

clixon_restconf_callhome_client: clixon_restconf_callhome_client.c
	$(CC) $(CPPFLAGS) -D__PROGRAM__=\"$@\" $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_ssl: clixon_util_ssl.c
	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

#clixon_util_grpc: clixon_util_grpc.c
#	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

distclean: clean
	rm -f Makefile *~ .depend TAGS config.status config.log

install: $(APPS)
	install -d -m 0755 $(DESTDIR)$(bindir)
	install -m 0755 $(INSTALLFLAGS) $(APPS) $(DESTDIR)$(bindir)

uninstall: 
	rm -f $(DESTDIR)$(bindir)/$(APPS)

TAGS:
	find $(srcdir) -not \( -type d \( -path './.git' \) -prune \) -name '*.[ch]' -type f | xargs etags

depend:
	$(CC) $(DEPENDFLAGS) @DEFS@ $(CPPFLAGS) $(CFLAGS) -MM $(APPSRC) > .depend

# Lines of code
loc:
	find . -name '*.[chyl]' -type f | xargs wc -l | tail -1 2> /dev/null

#include .depend

